#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>

/ {
    chosen { zmk,matrix-transform = &dactyl_manuform_number_row;
    };
    behaviors {
        shiftcaps: shiftcaps {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFTCAPS";
            #binding-cells = <0>;
            bindings = <&kp RIGHT_SHIFT>, <&caps_word>;

            tapping-term-ms = <200>;
        };

        quotetilde: quotetilde {
            compatible = "zmk,behavior-tap-dance";
            label = "QUOTETILDE";
            #binding-cells = <0>;
            bindings = <&kp SQT>, <&kp GRAVE>;

            tapping-term-ms = <200>;
        };

        lshiftcaps: lshiftcaps {
            compatible = "zmk,behavior-tap-dance";
            label = "LSHIFTCAPS";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&caps_word>;

            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp EQUAL            &kp N1          &kp N2    &kp N3       &kp N4        &kp N5                             &kp N6  &kp N7    &kp N8         &kp N9    &kp N0          &kp MINUS
                &kp TAB              &kp Q           &kp W     &kp E        &kp R         &kp T                              &kp Y   &kp U     &kp I          &kp O     &kp P           &kp BSLH
                &kp LCTRL            &kp A           &kp S     &kp D        &kp F         &kp G                              &kp H   &kp J     &kp K          &kp L     &kp SEMI        &quotetilde
                &mt LSHIFT CAPSLOCK  &kp Z           &kp X     &kp C        &kp V         &kp B                              &kp N   &kp M     &kp COMMA      &kp DOT   &kp FSLH        &mt RSHFT LA(CAPSLOCK)
                &kp UP_ARROW         &kp DOWN_ARROW  &kp LGUI  &key_repeat                                                                     &kp LBKT       &kp RBKT  &kp LEFT_ARROW  &kp RIGHT_ARROW

                                                                &kp RET       &kp LEFT_ALT  &mt ESCAPE DELETE    &to 4   &kp BSPC  &kp SPACE
                                                                &kp LEFT_GUI  &tog 1        &tog 2               &to 0   &to 3     &kp RIGHT_GUI
            >;
        };

        fkeys {
            bindings = <
                &trans  &trans  &trans  &trans  &trans  &trans            &trans  &kp F10  &kp F11  &kp F12  &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans            &trans  &kp F7   &kp F8   &kp F9   &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans            &trans  &kp F4   &kp F5   &kp F6   &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans            &trans  &kp F1   &kp F2   &kp F3   &trans  &trans
                &trans  &trans  &trans  &trans                                             &trans   &trans   &trans  &trans

                                        &trans  &trans  &trans    &trans  &trans   &trans
                                        &trans  &trans  &trans    &trans  &trans   &trans
            >;
        };

        numberkeys {
            bindings = <
                &trans  &trans  &trans  &trans  &trans  &trans            &trans  &rgb_ug RGB_TOG  &trans        &trans        &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans            &trans  &kp N7           &kp N8        &kp N9        &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans            &trans  &kp NUMBER_4     &kp N5        &kp NUMBER_6  &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans            &trans  &kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &trans  &trans
                &trans  &trans  &trans  &trans                                                     &kp N0        &trans        &trans  &trans

                                        &trans  &trans  &trans    &trans  &trans           &trans
                                        &trans  &trans  &trans    &trans  &trans           &trans
            >;
        };

        media {
            bindings = <
                &trans  &trans  &trans  &trans  &trans  &trans            &trans          &trans             &trans           &trans      &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans            &trans          &trans             &trans           &trans      &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans            &kp K_PREVIOUS  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp K_NEXT  &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans            &trans          &trans             &trans           &trans      &trans  &trans
                &trans  &trans  &trans  &trans                                                               &trans           &trans      &trans  &trans

                                        &trans  &trans  &trans    &trans          &trans             &trans
                                        &trans  &trans  &trans    &trans          &trans             &trans
            >;
        };

        game {
            bindings = <
                &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &kp W   &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &kp A   &kp S   &kp D   &trans            &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans                                            &trans  &trans  &trans  &trans

                                        &trans  &trans  &trans    &trans  &trans  &trans
                                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
